/*mixins*/

/* Micro ClearFix Mixin */
.clearfix {
    zoom: 1;

    &:before,
    &:after {
        content: "";
        display: table;
    }

    &:after {
        clear: both;
    }
}

/*border-radius*/
.border_radius (@radius: 5px) {
    -webkit-border-radius: @radius;
    -moz-border-radius: @radius;
    border-radius: @radius;
}

.plus {
    &:after {
        content: '+';
        width: 34px;
        height: 34px;
        position: absolute;
        background: #cc0000;
        color: #fff;
        font-weight: bold;
        right: 10px;
        top: 10px;
        text-align: center;
        font-size: 31px;
        line-height: 27px;
        .border_radius(4px);
    }
}

.minus {
    &:after {
        content: '\2013' !important;
    }
}

.arrow_down(@color: #ccc, @width: 6px, @height: 6px) {
    border-style: solid;
    border-width: @height @width/2 0 @width/2;
    border-color: @color transparent transparent transparent;
}

.arrow_top(@color: #ccc, @width: 6px, @height: 6px) {
    border-style: solid;
    border-width: 0 @width/2 @height @width/2;
    border-color: transparent transparent @color transparent;
}

.box-shadow(@shadow) {
    -webkit-box-shadow: @shadow; // iOS <4.3 & Android <4.1
    box-shadow: @shadow;
}

// Form validation states
//
// Used in forms.less to generate the form validation CSS for warnings, errors,
// and successes.

.form-control-validation-custom(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5) {
    // Color the label and help text
    .help-block,
    .control-label,
    .radio,
    .checkbox,
    .radio-inline,
    .checkbox-inline  {
        color: @text-color;
    }
    // Set the border and box shadow on specific inputs to match
    .form-control {
        border-color: @border-color;
        .box-shadow(inset 1px 1px 5px rgba(0, 0, 0, .15));

        &:focus {
            border-color: darken(@border-color, 5%);
            @shadow: inset 0 0 0 0 rgba(0, 0, 0, .15), 0 0 0 3px rgba(0, 128, 255, 0.3);
            .box-shadow(@shadow);
        }
    }
    // Set validation states also for addons
    .input-group-addon {
        color: @text-color;
        border-color: @border-color;
        background-color: @background-color;
    }
    // Optional feedback icon
    .form-control-feedback {
        color: @text-color;
    }
}

// Button sizes
.button-size(@padding-vertical; @padding-horizontal; @font-size; @line-height; @border-radius) {
    padding: @padding-vertical @padding-horizontal;
    font-size: @font-size;
    line-height: @line-height;
    border-radius: @border-radius;
}

// Transformations
.scale(@ratio) {
    -webkit-transform: scale(@ratio);
    -ms-transform: scale(@ratio); // IE9 only
    -o-transform: scale(@ratio);
    transform: scale(@ratio);
}

.scale(@ratioX; @ratioY) {
    -webkit-transform: scale(@ratioX, @ratioY);
    -ms-transform: scale(@ratioX, @ratioY); // IE9 only
    -o-transform: scale(@ratioX, @ratioY);
    transform: scale(@ratioX, @ratioY);
}

// Transitions
.transition(@transition) {
    -webkit-transition: @transition;
    -o-transition: @transition;
    transition: @transition;
}

.transition-property(@transition-property) {
    -webkit-transition-property: @transition-property;
    transition-property: @transition-property;
}

.transition-delay(@transition-delay) {
    -webkit-transition-delay: @transition-delay;
    transition-delay: @transition-delay;
}

.transition-duration(@transition-duration) {
    -webkit-transition-duration: @transition-duration;
    transition-duration: @transition-duration;
}

.transition-timing-function(@timing-function) {
    -webkit-transition-timing-function: @timing-function;
    transition-timing-function: @timing-function;
}

.transition-transform(@transition) {
    -webkit-transition: -webkit-transform @transition;
    -moz-transition: -moz-transform @transition;
    -o-transition: -o-transform @transition;
    transition: transform @transition;
}
